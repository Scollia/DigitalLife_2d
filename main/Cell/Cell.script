-- Способы получения энергии
--[[
Все живые организмы экосистемы по способу получения энергии делятся на фототрофы (получают энергию в виде электромагнитного
излучения) и хемотрофы (используют энергию окисления неорганических и/или органических веществ).


--]]

-- Питание
--[[
Все живые организмы экосистемы по способу получения энергии делятся на автотрофов и гетеротрофов.

Автотрофы способны образовывать органическое вещество, используя неорганический источник углерода (тмосферного СО2 и воды).
Гетеротрофы используют энергию окисления органических веществ и используют органические источники углерода.

Пиноцитоз (от греч. pino — пью и kytos — клетка, вместилище), или «клеточное питье», — это захват клеточной поверхностью
различных жидкостей (капелек липидов, растворов солей). Поглощенные клеточной поверхностью капельки жидкости погружаются
затем в цитоплазму клетки.

Фагоцитоз (от греч. phagos — пожирать и kytos — клетка, вместилище), или «клеточное заглатывание», — это активное
втягивание и поглощение микроскопических твердых питательных частиц (бактерий, простейших, различных фрагментов клеток). 
--]]

-- Нападение и защита
--[[
--]]

-- Передвижение
--[[
Способы движения одноклеточных разнообразны, поэтому у них наблюдается многообразие органоидов движения. Различают следующие
формы передвижения: жгутиковое, ресничное, амебоидное, волнообразное и скользящее.

Движение одноклеточных организмов обычно обусловлено тем, что они могут воспринимать различные раздражения из внешней среды и
реагировать на них. Вид движения, связанный с определенным раздражителем, называют таксисом (от греч. taxis — расположение).

Источником раздражения могут быть свет, температура, влага, химические вещества, пища и др. Таксисы могут быть положительными
и отрицательными. Так, когда эвглена зеленая стремится переплыть на освещенное место в водоеме — это положительный фототаксис,
а когда уплывает прочь от брошенной в воду крупинки соли — отрицательный.
--]]

-- Размножение
--[[
-- размножение
-- 1) обычного деления надвое (саркодовые, жгутиковые).
-- 2) многократного деления ядра и цитоплазмы- шизогонии (малярийный плазмодий)
-- 3) спорогонии (малярийный плазмодий)
-- 4) эндодиогения (токсоплазма)
--]]

--[[
--класс
-- https://habr.com/ru/articles/259265/
Cell_Body = {}
--тело класса
function Cell_Body:new(vName, vBrain)
	local obj = {}
	obj. = 
	obj.Brain = vBrain

-- метод
	function obj:getName()
		return self.firstName 
	end

	--чистая магия!
	setmetatable(obj, self)
	self.__index = self; return obj
end
-- 
-- --создаем экземпляр класса
-- vasya = Cell_Body:new("Вася", "Пупкин")
-- 
-- --обращаемся к свойству
-- print(vasya.firstName)    --> результат: Вася
-- 
-- --обращаемся к методу
-- print(vasya:getName())  --> результат: Вася
]]--

go.property("Energy", 10)
go.property("Organic", 10) -- Размер клетки
go.property("Oxygen", 10)

go.property("Color_r", 10) 
go.property("Color_g", 10)
go.property("Color_b", 10)

function init(self)
	print("Energy=" .. tostring(self.Energy) .. ", Organic=" .. tostring(self.Organic) .. ", Oxygen=" .. tostring(self.Oxygen))
	print("R=" .. tostring(self.Color_r) .. ", G=" .. tostring(self.Color_g) .. ", B=" .. tostring(self.Color_b))
	go.set("#sprite_anim", "tint", vmath.vector4(0.1*self.Color_r, 0.1*self.Color_g, 0.1*self.Color_b, 0.5))
	go.set_scale(0.01 + 0.001 * self.Organic)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
